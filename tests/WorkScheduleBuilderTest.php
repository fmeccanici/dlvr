<?php

use Carbon\CarbonImmutable;
use Fmeccanici\Dlvr\CreateWorkDay;
use Fmeccanici\Dlvr\DayOfWeek;
use Fmeccanici\Dlvr\Time;
use Fmeccanici\Dlvr\WorkHours;
use Fmeccanici\Dlvr\WorkScheduleBuilder;
use PHPUnit\Framework\TestCase;

class WorkScheduleBuilderTest extends TestCase
{
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
    }
    
    /** @test */
    public function it_should_add_workday()
    {
        // Given
        $workScheduleBuilder = new WorkScheduleBuilder();
        $workDay = CreateWorkDay::monday();

        // When
        $workSchedule = $workScheduleBuilder->addRegularWorkDay(DayOfWeek::MONDAY, 9, 0, 17, 0)->build();

        // Then
        self::assertEquals($workDay, $workSchedule->workWeek()->monday());
    }

    /** @test */
    public function it_should_add_deviating_work_hours()
    {
        // Given
        $workScheduleBuilder = new WorkScheduleBuilder();
        $workHours = new WorkHours(new Time(8,0), new Time(15, 0));
        $date = CarbonImmutable::now()->next(CarbonImmutable::MONDAY);

        // When
        $workSchedule = $workScheduleBuilder
            ->addRegularWorkDay(DayOfWeek::MONDAY, 9, 0, 17, 0)
            ->addDeviatingWorkHours($date, 8, 0, 15, 0)->build();


        // Then
        self::assertEquals($workHours, $workSchedule->workDay($date->year, $date->month, $date->day)->workHours());
    }
}